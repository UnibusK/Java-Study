/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-10-27 04:50:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>회원가입</title>\r\n");
      out.write("		<style>\r\n");
      out.write("			#wrap {\r\n");
      out.write("				width:300px;\r\n");
      out.write("				border:2px solid black;\r\n");
      out.write("				border-radius:10px;\r\n");
      out.write("				margin:0 auto;\r\n");
      out.write("				padding:30px;\r\n");
      out.write("				background-color:darkgray;\r\n");
      out.write("				color:white;\r\n");
      out.write("			}\r\n");
      out.write("			input[name=\"id\"] {\r\n");
      out.write("				width:120px;\r\n");
      out.write("				margin-left:10px;\r\n");
      out.write("			}\r\n");
      out.write("			input[name=\"pw\"] {\r\n");
      out.write("				width:120px;\r\n");
      out.write("				margin-left:6px;\r\n");
      out.write("			}\r\n");
      out.write("			input[name=\"nm\"]{\r\n");
      out.write("				width:120px;\r\n");
      out.write("				margin-left:10px;\r\n");
      out.write("			}\r\n");
      out.write("			input[name=ph]{\r\n");
      out.write("				width:120px;\r\n");
      out.write("				margin-left:10px;\r\n");
      out.write("			}\r\n");
      out.write("			fieldset{\r\n");
      out.write("				border:1px solid beige;\r\n");
      out.write("				border-radius:6px;\r\n");
      out.write("				width:130px;\r\n");
      out.write("				margin:0 auto;\r\n");
      out.write("			}\r\n");
      out.write("			#submit, #reset{\r\n");
      out.write("				display:block;\r\n");
      out.write("				margin:0 auto;\r\n");
      out.write("			}\r\n");
      out.write("			#submit {\r\n");
      out.write("				background-color:black;\r\n");
      out.write("				color:white;\r\n");
      out.write("			}\r\n");
      out.write("		</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<!-- form태그는 submit이 눌렸을 때 내부의 input을 전송한다.\r\n");
      out.write("			전송 목적지는 action 위치이며 방식은 method를 따른다. -->\r\n");
      out.write("		<!-- 전송데이터는 name=value 형태로 가공되여 request를 통해 전송된다. -->\r\n");
      out.write("		\r\n");
      out.write("		<!-- *******매우중요 -->\r\n");
      out.write("		<!-- get방식은 도메인 뒤로 데이터가 그대로 노출되는 방식 -->\r\n");
      out.write("			<!-- 개발자가 데이터의 전송여부를 파악하기 쉽고 개발편의가 대단이 높음 -->\r\n");
      out.write("			<!-- 보낼 수 있는 데이터의 길이가 잛고, 문자로 표현하기 어려운 데이터는 전송할 수 없음(객체전송 불가) -->\r\n");
      out.write("		<!-- post방식은 보이지 안흔ㄴ 공간에 데이터를 담아서 전송하는 방식 -->\r\n");
      out.write("			<!-- 개발자는 데이터를 별도로 확인하기 전까지 전송여부를 파악할 수 없다. -->\r\n");
      out.write("			<!-- 데이터 보안이 가능하고 객체를 전달할 수 있다는 장점을 갖는다. -->\r\n");
      out.write("			<!-- 한글이 깨진다. -->\r\n");
      out.write("		<div id=\"wrap\">\r\n");
      out.write("			<form method=\"post\" action=\"dest.jsp\">\r\n");
      out.write("				<h1>회원가입</h1>\r\n");
      out.write("				<hr>\r\n");
      out.write("				아 이 디 : <input type=\"text\" placeholder=\"아이디를 입력해주세요\" name=\"id\" id=\"id\"><input type=\"checkbox\" onclick=\"idCheck()\">중복체크<br>\r\n");
      out.write("				비밀번호 : <input type=\"password\" placeholder=\"비밀번호 4자이상으로 넣어주세요\" name=\"pw\"><br>\r\n");
      out.write("				이&nbsp&nbsp&nbsp&nbsp&nbsp름 : <input type=\"text\" placeholder=\"이름을 입력해주세요\" name=\"nm\"><br>\r\n");
      out.write("				연 락 처 : <input type=\"text\" placeholder=\"-제외, 숫자만 입력해주세요\" name=\"ph\">\r\n");
      out.write("				<br><br>\r\n");
      out.write("				<fieldset id = \"one\">\r\n");
      out.write("					<legend>관심분야</legend>\r\n");
      out.write("					<input type=\"radio\" value=\"java\" name=\"sub\">JAVA<br>\r\n");
      out.write("					<input type=\"radio\" value=\"html\" name=\"sub\">HTML<br>\r\n");
      out.write("					<input type=\"radio\" value=\"js\" name=\"sub\">Java Script\r\n");
      out.write("				</fieldset>\r\n");
      out.write("				<br>\r\n");
      out.write("				<fieldset id =\"two\">\r\n");
      out.write("					<legend>수강과목</legend>\r\n");
      out.write("					JSP<input type=\"checkbox\" value=\"jsp\" name=\"jsp\">\r\n");
      out.write("					<br>\r\n");
      out.write("					SQL<input type=\"checkbox\" value=\"sql\" name=\"sql\">\r\n");
      out.write("				</fieldset>\r\n");
      out.write("				<hr>\r\n");
      out.write("				<input type=\"submit\" value=\"회원가입\" id=\"submit\">\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<script>\r\n");
      out.write("			function idCheck(){\r\n");
      out.write("				let userID = document.getElementById(\"id\").value\r\n");
      out.write("				prompt(\"아이디 중복체크\" , defalt=userID);\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
