/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-10-26 05:54:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		");

			//페이지가 여러개로 제작되어 있는 경우에는
			//한개의 페이지에서 특정 값을 다른 페이지로 이전해야 하는 경우가 있다.
			//기본적으로는 데이터는 만들어진 곳에서만 사용이 가능하고 다른페이지로 넘길 수 없다.
			int number=500;
		
			//데이터의 공유 범위 : Scope
			//PageScope : 한페이지 내부에서 해당 데이터가 사용 가능 -> 다른페이지에서 공유 불가
			//RequestScope :1회의 request에 해당 데이터가 사용가능
			//SessionScope : 하나의 사용자가 해당 데이터를 사용가능 -> 다른 모든페이지가 해당데이터 공유, 다른사용자는 공유 불가
							//로그인정보 등
			//ApplicationScope : 모든 사용자가 모든 페이지에서 공유 
			
			//*******매우 중요
			//get방식 
			//도메인 뒤쪽에 ? 변수=값을 통해 데이터를 다른 페이지로 전달하는 방법
			//<a>, <form> 또는 자바스크립트를 이용하여 입력한다.
		
      out.write("\r\n");
      out.write("		<!-- 도메인 뒤쪽에 ? 후에 값을 넣어서 데이터 전송하는 방식 : get 방식 -->\r\n");
      out.write("		<a href=\"data.jsp?number=");
      out.print(number);
      out.write("\">눌러서 다른페이지로 이동</a>\r\n");
      out.write("		<a href=\"data.jsp?number=999&name=지구\">다른 값을 다른페이지로 이동</a>\r\n");
      out.write("		\r\n");
      out.write("		<form method=\"get\" action=\"data.jsp\">\r\n");
      out.write("/*			<fieldset>\r\n");
      out.write("				<legend>수업시간</legend>\r\n");
      out.write("				나타낼 문장 : <input type=\"text\" name=\"A\"><br>\r\n");
      out.write("				글씨색 : <input type=\"color\" name=\"B\"><br>\r\n");
      out.write("				반복횟수 : <input type=\"number\" name=\"C\">\r\n");
      out.write("				<input type=\"submit\" value=\"전송\">\r\n");
      out.write("			</fieldset>\r\n");
      out.write("/*			\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>연습시간</legend>\r\n");
      out.write("				id : <input type=\"text\" name=\"id\"><br>\r\n");
      out.write("				P/W : <input type=\"password\" name=\"passowrd\"><br>\r\n");
      out.write("				<input type=\"submit\" value=\"전송\">\r\n");
      out.write("			</fieldset>\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
