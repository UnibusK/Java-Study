/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-30 02:36:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>자바빈의 사용</title>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<!-- class 부분에는 객체를 생성할 class명을 적는다. -->\r\n");
      out.write("	<!-- id 부분은 객체의 이름을 적는다. -->\r\n");
      out.write("	<!-- scope 부분에는 객체가 유지될 범위를 적는다. -->\r\n");
      out.write("	<!-- jsp:useBean이 실행되면 객체를 생성한 것과 같은 효과를 가진다. -->\r\n");
      out.write("	");
      beans.Student s = null;
      s = (beans.Student) _jspx_page_context.getAttribute("s", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (s == null){
        s = new beans.Student();
        _jspx_page_context.setAttribute("s", s, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');

		s.setName("김태양");
	
      out.write("\r\n");
      out.write("	<h1>이름 : ");
      out.print(s.getName() );
      out.write("</h1>\r\n");
      out.write("	<!-- 프레임웍이기 때문에 형식을 그대로 갖추어야 동작을 하는 것임 -->\r\n");
      out.write("	<!-- name : 생성된 객체의 이름(id)를 적는다, 목적지, 객체의 이름 -->\r\n");
      out.write("	<!-- property: 참조할 필드의 이름을 적는다. setter, getter가 있어야 하는 필드명 -->\r\n");
      out.write("	<!-- value: 매개변수에 들어갈 값을 적는다. -->\r\n");
      out.write("	<!-- setProperty는 setField(value)실행 시키고 getProperty는 getField()실행 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("s"), "age", "1", null, null, false);
      out.write('\r');
      out.write('\n');
      out.write('	');

		//같은 뜻
		//s.setAge(29);
	
      out.write("\r\n");
      out.write("	<!-- S객체를 참조해서 age라는 필드를 가져옴, java에 getAge가 있어야 읽을 수 있음 -->\r\n");
      out.write("	<h1>나이 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((beans.Student)_jspx_page_context.findAttribute("s")).getAge())));
      out.write("</h1>\r\n");
      out.write("	");

		//같은 뜻
		//s.getAge();
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("s"), "address", "우주네 집", null, null, false);
      out.write("\r\n");
      out.write("	<h2>사는곳 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((beans.Student)_jspx_page_context.findAttribute("s")).getAddress())));
      out.write("</h2>\r\n");
      out.write("	<hr>\r\n");
      out.write("	");
      beans.Student stu = null;
      stu = (beans.Student) _jspx_page_context.getAttribute("stu", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (stu == null){
        stu = new beans.Student();
        _jspx_page_context.setAttribute("stu", stu, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("stu"), "age", "1", null, null, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("stu"), "name", "김지구", null, null, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("stu"), "address", "우주네 house", null, null, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<h1>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((beans.Student)_jspx_page_context.findAttribute("stu")).getName())));
      out.write("</h1>\r\n");
      out.write("	<h1>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((beans.Student)_jspx_page_context.findAttribute("stu")).getAge())));
      out.write("</h1>\r\n");
      out.write("	<h2>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((beans.Student)_jspx_page_context.findAttribute("stu")).getAddress())));
      out.write("</h2>\r\n");
      out.write("	\r\n");
      out.write("	<!-- action tag의 scope범위 : 데이터가 잔존해서 유지되는 범위를 뜻함, java 코드와 html코드로 지정할 수 있음 -->\r\n");
      out.write("	<!-- page : 단일 페이지 내에서만 유지 -->\r\n");
      out.write("	<!-- request : 1회의 request 범위에서 유지 -->\r\n");
      out.write("	<!-- session : session이 만료되기 전까지 단일 사용자에게 유지 -->\r\n");
      out.write("	<!-- application : 모든 페이지 모든 사용자에게 유지 -->\r\n");
      out.write("	\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
